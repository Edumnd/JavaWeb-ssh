<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
<!-- 
	lazy-init:用来控制bean对象延迟加载。
	scope:范围，用来定义bean对象的作用范围
		默认值为singleton
		prototype:原型
			原型Bean是指，每一调用getBean方法来从
			Spring容器中获取bean对象的时候，spring容器
			都会构建一个新的bean对象返回。
			
			destroy-method:指明spring容器在销毁bean对象之前要执行的方法
			init-method:指明spring容器在构建好baen对象之后所要执行的
						初始化操作
 -->
	<bean name="tea" class="com.briup.bean.Teacher" 
		  destroy-method="pre_destory" 
		  init-method="post_consturct">
		<!-- 按照参数位置进行赋值 -->
		<constructor-arg index="2" ref="stu"></constructor-arg>
		<constructor-arg index="0" ref="id"></constructor-arg>
		<constructor-arg index="1" value="terry"></constructor-arg>
	</bean>
	<bean name="id" class="java.lang.Long">
		<constructor-arg index="0" value="100"></constructor-arg>
	</bean>
	<bean name="stu" class="com.briup.bean.Student">
		<!-- 按照构造参数名字进行注入 -->
		<!-- <constructor-arg name="name" value="lisi"></constructor-arg>
		<constructor-arg name="age" value="10"></constructor-arg>
		<constructor-arg name="idL" value="10"></constructor-arg> -->
		<!-- 按照类型注入，为了避免我们想要赋得值跟实际接受参数不一致，
			应该保证，相同类型的值顺序要跟在构造器中出现的位置是一致的。
		 -->
	<!-- 	<constructor-arg type="java.lang.Integer" value="20"></constructor-arg>
		<constructor-arg type="java.lang.String" value="wangwu"></constructor-arg>
		<constructor-arg type="java.lang.Long" value="100"></constructor-arg>
		<constructor-arg type="java.lang.String" value="11@11.com"></constructor-arg> -->
		<!-- <constructor-arg index="0" type="java.lang.Long" name="idL" value="100"></constructor-arg> -->
	</bean>
</beans>